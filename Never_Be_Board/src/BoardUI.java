
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Yi Zhang
 */


import com.leapmotion.leap.*;
import com.leapmotion.leap.Gesture.State;
import java.io.IOException;
import java.lang.Math;

import  sun.audio.*;    //import the sun.audio package
import  java.io.*;
import java.applet.AudioClip;
import java.applet.Applet;
import java.lang.Object.*;
import java.net.*;


class BUI extends javax.swing.JFrame {

    /**
     * Creates new form BoardUI
     */
    public BUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton10 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton24 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Never Be Board");
        setResizable(false);

        jButton10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton10.setForeground(new java.awt.Color(0, 153, 51));
        jButton10.setText("Start Audio Navigation");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Destination:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Click on one of the buttons above to set.");

        jButton3.setFont(new java.awt.Font("Arial Unicode MS", 0, 18)); // NOI18N
        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton20.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton20.setForeground(new java.awt.Color(255, 0, 51));
        jButton20.setText("Stop Audio Navigation");
        jButton20.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jButton20.setMinimumSize(new java.awt.Dimension(0, 0));
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel5.setText("Device Status: Disconnected");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Distance to Go:");

        jTabbedPane1.setBorder(new javax.swing.border.MatteBorder(null));
        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Peg Practice", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Calibri", 0, 24))); // NOI18N
        jLayeredPane1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLayeredPane1.setOpaque(true);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Board");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Random Hole");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setToolTipText("");

        jButton11.setBackground(new java.awt.Color(100, 100, 100));
        jButton11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton11.setForeground(new java.awt.Color(250, 250, 250));
        jButton11.setText("Hole 1");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setBackground(new java.awt.Color(100, 100, 100));
        jButton12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton12.setForeground(new java.awt.Color(250, 250, 250));
        jButton12.setText("Hole 2");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setBackground(new java.awt.Color(100, 100, 100));
        jButton13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton13.setForeground(new java.awt.Color(250, 250, 250));
        jButton13.setText("Hole 3");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setBackground(new java.awt.Color(100, 100, 100));
        jButton14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton14.setForeground(new java.awt.Color(250, 250, 250));
        jButton14.setText("Hole 4");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setBackground(new java.awt.Color(100, 100, 100));
        jButton15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton15.setForeground(new java.awt.Color(250, 250, 250));
        jButton15.setText("Hole 5");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setBackground(new java.awt.Color(100, 100, 100));
        jButton16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton16.setForeground(new java.awt.Color(250, 250, 250));
        jButton16.setText("Hole 6");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setBackground(new java.awt.Color(100, 100, 100));
        jButton17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton17.setForeground(new java.awt.Color(250, 250, 250));
        jButton17.setText("Hole 7");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setBackground(new java.awt.Color(100, 100, 100));
        jButton18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton18.setForeground(new java.awt.Color(250, 250, 250));
        jButton18.setText("Hole 8");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setBackground(new java.awt.Color(100, 100, 100));
        jButton19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton19.setForeground(new java.awt.Color(250, 250, 250));
        jButton19.setText("Hole 9");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jComboBox1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane1.addTab("Peg Practice", jLayeredPane1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ring Practice", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Calibri", 0, 24))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(231, 8, 12));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setText("Stick Length");

        jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B", "C", "D" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Random Stick");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setPreferredSize(new java.awt.Dimension(355, 188));

        jButton24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton24.setText("Stick 4");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jButton23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton23.setText("Stick 3");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jButton25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton25.setText("Stick 5");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jButton22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton22.setText("Stick 2");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton26.setText("Stick 6");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jButton21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton21.setText("Stick 1");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton24, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                    .addComponent(jButton21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton26, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                    .addComponent(jButton23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(4, 4, 4)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(85, 85, 85))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))))
        );

        jTabbedPane1.addTab("Ring Practice", jPanel3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jLabel8.setText("Audio Navigation: Off");

        jButton5.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        jButton5.setText("Demo");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel1))
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton5))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton10)
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6))
                    .addComponent(jButton5))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.getAccessibleContext().setAccessibleName("Device Status");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String Board;
    private int Hole;
    private final double origin[] = {100.0,100.0,100.0};
    public double destination[] = origin;
    private double CurrentPos[] = new double[3];
    private double diff[] = new double[3];
    private double distance;
    private double planeDist;
    private boolean AudioNavigation;
    public static boolean isBoard = true;
    public double Tolerance;
    
    private final double A1[] = {194.7447, 138.665, 115.968};
    private final double A2[] = {-27.5508, 143.927, 100.51};
    private final double A3[] = {-182.333, 157.802, 102.482};
    private final double A4[] = {114.069, 150.278, 54.2279};
    private final double A5[] = {-38.8402, 121.7, 45.8797};
    private final double A6[] = {-196.658, 151.865, 40.2489};
    private final double A7[] = {146.865, 140.781, -40.4638};
    private final double A8[] = {40.781, 147.284, -44.0893};
    private final double A9[] = {-195.896, 146.145, -40.6804};
    private final double B1[] = {-10.1869, 395.608, 3.16031};
        private final double B2[] = {-10.1869, 395.608, 3.16031};
    private final double B3[] = {-10.1869, 395.608, 3.16031};
    private final double B4[] = {-10.1869, 395.608, 3.16031};
    private final double B5[] = {-10.1869, 395.608, 3.16031};
    private final double B6[] = {-10.1869, 395.608, 3.16031};
    private final double B7[] = {-10.1869, 395.608, 3.16031};
    private final double B8[] = {-10.1869, 395.608, 3.16031};
    private final double B9[] = {1,2,3};
    private final double C1[] = {1,2,3};
    private final double C2[] = {1,2,3};
    private final double C3[] = {1,2,3};
    private final double C4[] = {1,2,3};
    private final double C5[] = {1,2,3};
    private final double C6[] = {1,2,3};
    private final double C7[] = {1,2,3};
    private final double C8[] = {1,2,3};
    private final double C9[] = {1,2,3};
    private final double D1[] = {1,20,3};
    private final double D2[] = {1,200,3};
    private final double D3[] = {1,2000,3};
    private final double D4[] = {1,20000,3};
    private final double D5[] = {1,2,3};
    private final double D6[] = {1,2,3};
    private final double D7[] = {1,2,3};
    private final double D8[] = {1,2,3};
    private final double D9[] = {1,2,3};
    
    private final double S1[] = {1,2,3};
    private final double S2[] = {1,2,3};
    private final double S3[] = {1,2,3};
    private final double S4[] = {1,2,3};
    private final double S5[] = {1,2,3};
    private final double S6[] = {1,2,3};
    
    private final double StickVertical[] = {1,2,3,4,5};
    
    private String StickLength;
    
        
    public double getDistance(){
        return distance*0.039370;
    }
    public double getPlaneDist(){
        return planeDist*0.039370;
    }
    
    
    public boolean AudioNavigationOn(){
        return AudioNavigation;
    }
    
    public void turnOffAudio(){
        AudioNavigation = false;
        jLabel8.setText("Audio Navigation: Off");
    }
    
    public double[] Diff(){
        return diff;
    }
    
    
    public void setCurrentPosition(Vector v){
        CurrentPos[0] = v.getX();
        CurrentPos[1] = v.getY();
        CurrentPos[2] = v.getZ(); 
        if (destination != origin){
            diff[0]=destination[0]-CurrentPos[0];
            diff[1]=destination[1]-CurrentPos[1];
            diff[2]=destination[2]-CurrentPos[2];
            distance = Math.sqrt(diff[0]*diff[0]+diff[1]*diff[1]+diff[2]*diff[2]);
            planeDist = Math.sqrt(diff[0]*diff[0]+diff[2]*diff[2]);
            double distanceInIn = distance *0.039370;
            
            String roundedDistance = String.valueOf(Math.round(distanceInIn*100)/100.0d);
            String roundedPlaneDist = String.valueOf(Math.round(planeDist*3.9370)/100.0d);
            jLabel6.setText("Destination to Go: " +roundedDistance + "inches");
        }
    }
    
    public void setDestination(String B,int H){
        switch(B){
            case "A": {
                switch (H) {
                    case 1:  destination = A1;
                             Tolerance = 15.0;
                             break;
                    case 2:  destination = A2;
                             Tolerance = 20.0;
                             break;
                    case 3:  destination = A3;
                             Tolerance = 25.0;
                             break;
                    case 4:  destination = A4;
                             Tolerance = 23.0;
                             break;
                    case 5:  destination = A5;
                             Tolerance = 15.0;
                             break;
                    case 6:  destination = A6;
                             Tolerance = 20.0;
                             break;
                    case 7:  destination = A7;
                             Tolerance = 25.0;
                             break;
                    case 8:  destination = A8;
                             Tolerance = 25.0;
                             break;
                    case 9:  destination = A9;
                             Tolerance = 15.0;
                             break;
                }
                break;
            }
            case "B": {
                switch (H) {
                    case 1:  destination = B1;
                             break;
                    case 2:  destination = B2;
                             break;
                    case 3:  destination = B3;
                             break;
                    case 4:  destination = B4;
                             break;
                    case 5:  destination = B5;
                             break;
                    case 6:  destination = B6;
                             break;
                    case 7:  destination = B7;
                             break;
                    case 8:  destination = B8;
                             break;
                    case 9:  destination = B9;
                             break;
                }
                break;
            }
            case "C": {
                switch (H) {
                    case 1:  destination = C1;
                             break;
                    case 2:  destination = C2;
                             break;
                    case 3:  destination = C3;
                             break;
                    case 4:  destination = C4;
                             break;
                    case 5:  destination = C5;
                             break;
                    case 6:  destination = C6;
                             break;
                    case 7:  destination = C7;
                             break;
                    case 8:  destination = C8;
                             break;
                    case 9:  destination = C9;
                             break;
                }
                break;
            }
            case "D": {
                switch (H) {
                    case 1:  destination = D1;
                             break;
                    case 2:  destination = D2;
                             break;
                    case 3:  destination = D3;
                             break;
                    case 4:  destination = D4;
                             break;
                    case 5:  destination = D5;
                             break;
                    case 6:  destination = D6;
                             break;
                    case 7:  destination = D7;
                             break;
                    case 8:  destination = D8;
                             break;
                    case 9:  destination = D9;
                             break;
                }
                break;
            }
        }
    }
    
    public void setStickDestination(int stick, String stickLength){
        switch (stick){
            case 1: {
                destination = S1;
                switch (stickLength){
                    case "A": destination[2]=StickVertical[0];
                              break;
                    case "B": destination[2]=StickVertical[1];
                              break;
                    case "C": destination[2]=StickVertical[2];
                              break;
                    case "D": destination[2]=StickVertical[3];
                              break;
                    case "E": destination[2]=StickVertical[4];
                              break;                        
                }
                break;
            }
            case 2: {
                destination = S2;
                switch (stickLength){
                    case "A": destination[2]=StickVertical[0];
                              break;
                    case "B": destination[2]=StickVertical[1];
                              break;
                    case "C": destination[2]=StickVertical[2];
                              break;
                    case "D": destination[2]=StickVertical[3];
                              break;
                    case "E": destination[2]=StickVertical[4];
                              break;                           
                }
                break;
            }
            case 3: {
                destination = S3;
                switch (stickLength){
                    case "A": destination[2]=StickVertical[0];
                              break;
                    case "B": destination[2]=StickVertical[1];
                              break;
                    case "C": destination[2]=StickVertical[2];
                              break;
                    case "D": destination[2]=StickVertical[3];
                              break;
                    case "E": destination[2]=StickVertical[4];
                              break;                          
                }
                break;
            }
            case 4: {
                destination = S4;
                switch (stickLength){
                    case "A": destination[2]=StickVertical[0];
                              break;
                    case "B": destination[2]=StickVertical[1];
                              break;
                    case "C": destination[2]=StickVertical[2];
                              break;
                    case "D": destination[2]=StickVertical[3];
                              break;
                    case "E": destination[2]=StickVertical[4];
                              break;                            
                }
                break;
            }
            case 5: {
                destination = S5;
                switch (stickLength){
                    case "A": destination[2]=StickVertical[0];
                              break;
                    case "B": destination[2]=StickVertical[1];
                              break;
                    case "C": destination[2]=StickVertical[2];
                              break;
                    case "D": destination[2]=StickVertical[3];
                              break;
                    case "E": destination[2]=StickVertical[4];
                              break;                              
                }
                break;
            }
            case 6: {
                destination = S6;
                switch (stickLength){
                    case "A": destination[2]=StickVertical[0];
                              break;
                    case "B": destination[2]=StickVertical[1];
                              break;
                    case "C": destination[2]=StickVertical[2];
                              break;
                    case "D": destination[2]=StickVertical[3];
                              break;
                    case "E": destination[2]=StickVertical[4];
                              break;                              
                }
                break;
            }
                                
                    
               
        }
    }

    
    public void setStatus(String s){
        jLabel5.setText(s);
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Hole = (int)(Math.random()*9+1);
        Board = (String)jComboBox1.getSelectedItem();
        String str = ("Board " + Board +" Hole " + Hole);
        setDestination(Board, Hole);
        jLabel1.setText(str);
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        Hole = 1;
        Board = (String)jComboBox1.getSelectedItem();
        String str = ("Board " + Board +" Hole " + Hole);
        jLabel1.setText(str);
        setDestination(Board, Hole);
        

    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        Hole = 2;
        Board = (String)jComboBox1.getSelectedItem();
        String str = ("Board " + Board +" Hole " + Hole);
        jLabel1.setText(str);
        setDestination(Board, Hole);
        
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        Hole = 3;
        Board = (String)jComboBox1.getSelectedItem();
        String str = ("Board " + Board +" Hole " + Hole);
        jLabel1.setText(str);
        setDestination(Board, Hole);

    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        Hole = 4;
        Board = (String)jComboBox1.getSelectedItem();
        String str = ("Board " + Board +" Hole " + Hole);
        jLabel1.setText(str);
        setDestination(Board, Hole);    

    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        Hole = 5;
        Board = (String)jComboBox1.getSelectedItem();
        String str = ("Board " + Board +" Hole " + Hole);
        jLabel1.setText(str);
        setDestination(Board, Hole);

    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        Hole = 6;
        Board = (String)jComboBox1.getSelectedItem();
        String str = ("Board " + Board +" Hole " + Hole);
        jLabel1.setText(str);
        setDestination(Board, Hole);

    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        Hole = 7;
        Board = (String)jComboBox1.getSelectedItem();
        
        String str = ("Board " + Board +" Hole " + Hole);
        jLabel1.setText(str);
        setDestination(Board,Hole);
        

    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        Hole = 8;
        Board = (String)jComboBox1.getSelectedItem();
        String str = ("Board " + Board +" Hole " + Hole);
        jLabel1.setText(str);
        setDestination(Board, Hole);

    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        Hole = 9;
        Board = (String)jComboBox1.getSelectedItem();
        String str = ("Board " + Board +" Hole " + Hole);
        jLabel1.setText(str);
        setDestination(Board, Hole);

    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        if (destination == origin){
                try {
                    AudioClip clip = Applet.newAudioClip(new URL("file:C:\\Never_Be_Board\\Sound\\AudioError.wav"));
                    clip.play();
                } catch (MalformedURLException murle) {
                    //System.out.println(murle);
                }
        } else {
        AudioNavigation = true;
        jLabel8.setText("Audio Navigation: On");
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        AudioNavigation = false;
        isBoard = true;
        jLabel8.setText("Audio Navigation: Off");
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        int Stick = 1;
        setStickDestination(Stick,(String)jComboBox1.getSelectedItem());
        String str = ("Stick 1 Length " + (String)jComboBox1.getSelectedItem());
        jLabel1.setText(str);
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        int Stick = 2;
        setStickDestination(Stick,(String)jComboBox1.getSelectedItem());
        String str = ("Stick 2 Length " + (String)jComboBox1.getSelectedItem());
        jLabel1.setText(str);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        int Stick = 3;
        setStickDestination(Stick,(String)jComboBox1.getSelectedItem());
        String str = ("Stick 3 Length " + (String)jComboBox1.getSelectedItem());
        jLabel1.setText(str);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        int Stick = 4;
        setStickDestination(Stick,(String)jComboBox1.getSelectedItem());
        String str = ("Stick 4 Length " + (String)jComboBox1.getSelectedItem());
        jLabel1.setText(str);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        int Stick = 5;
        setStickDestination(Stick,(String)jComboBox1.getSelectedItem());
        String str = ("Stick 5 Length " + (String)jComboBox1.getSelectedItem());
        jLabel1.setText(str);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        int Stick = 6;
        setStickDestination(Stick,(String)jComboBox1.getSelectedItem());
        String str = ("Stick 6 Length " + (String)jComboBox1.getSelectedItem());
        jLabel1.setText(str);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int RanStick = (int)(Math.random()*6+1);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int DemoHole[] = {4,5,7,8};
        Hole = DemoHole[(int)(Math.random()*4+1)];
        Board = (String)jComboBox1.getSelectedItem();
        String str = ("Board " + Board +" Hole " + Hole);
        setDestination(Board, Hole);
        jLabel1.setText(str);
        AudioNavigation = true;
        jLabel8.setText("Audio Navigation: On");
    }//GEN-LAST:event_jButton5ActionPerformed




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}

public class BoardUI{
        /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BoardUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BoardUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BoardUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BoardUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        new StartFirst().Start();
    }
}

class StartFirst {
    public void Start() {
        // Create a sample listener and controller
        LeapListener listener = new LeapListener();
        Controller controller = new Controller();

        // Have the sample listener receive events from the controller
        controller.addListener(listener);
        

        // Keep this process running until Enter is pressed
        //System.out.println("Press Enter to quit...");
        try {
            System.in.read();
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Remove the sample listener when done
        controller.removeListener(listener);
    }
}
    

class LeapListener extends Listener {
      
    private BUI UI;
    
    private long nextBeepTime = 0; 
    
    private boolean DropPositive = false;
    
    private int beepTimes = 0;
    
    private double DropTolerance;
    
    private boolean timeToMoveUp;
       
    private boolean HandDetected = false;
      
    private AudioClip clip;
    
    private String direction;
    
    public LeapListener(){
         UI = new BUI();
         UI.setVisible(true);
    }


        
    public void onInit(Controller controller) {
//        System.out.println("Initialized");
    }

    public void onConnect(Controller controller) {
        UI.setStatus("Device Status: Connected");
//        System.out.println("Connected");
        controller.enableGesture(Gesture.Type.TYPE_SWIPE);
        controller.enableGesture(Gesture.Type.TYPE_CIRCLE);
        controller.enableGesture(Gesture.Type.TYPE_SCREEN_TAP);
        controller.enableGesture(Gesture.Type.TYPE_KEY_TAP);
    }

    public void onDisconnect(Controller controller) {
        UI.setStatus("Device Status:Disconnected");
        //Note: not dispatched when running in a debugger.
//        System.out.println("Disconnected");
    }

    public void onExit(Controller controller) {
//        System.out.println("Exited");
    }

    public void onFrame(Controller controller) {
        // Get the most recent frame and report some basic information
        Frame frame = controller.frame();
        UI.setStatus("Device Status: Connected    Hands: " + frame.hands().count()
                         + " Fingers: " + frame.fingers().count());
//        System.out.println("Frame id: " + frame.id()
//                         + ", timestamp: " + frame.timestamp()
//                         + ", hands: " + frame.hands().count()
//                         + ", fingers: " + frame.fingers().count()
//                         + ", tools: " + frame.tools().count()
//                         + ", gestures " + frame.gestures().count());

        if (!frame.hands().isEmpty()) {
            // Get the first hand
            Hand hand = frame.hands().get(0);

            // Check if the hand has any fingers
            FingerList fingers = hand.fingers();
            if (!fingers.isEmpty()) {
                // Calculate the hand's average finger tip position
                Vector avgPos = Vector.zero();
                for (Finger finger : fingers) {
                    avgPos = avgPos.plus(finger.tipPosition());
                }
                avgPos = avgPos.divide(fingers.count());
//                System.out.println("Hand has " + fingers.count()
//                                 + " fingers, average finger tip position: " + avgPos);
                
            }

            // Get the hand's sphere radius and palm position
//            System.out.println("Hand sphere radius: " + hand.sphereRadius()
//                             + " mm, palm position: " + hand.palmPosition());
            UI.setCurrentPosition(hand.palmPosition());
       

            // Get the hand's normal vector and direction
            Vector normal = hand.palmNormal();
            Vector direction = hand.direction();

            // Calculate the hand's pitch, roll, and yaw angles
//            System.out.println("Hand pitch: " + Math.toDegrees(direction.pitch()) + " degrees, "
//                             + "roll: " + Math.toDegrees(normal.roll()) + " degrees, "
//                             + "yaw: " + Math.toDegrees(direction.yaw()) + " degrees");
        }

         if (!frame.hands().isEmpty()) {
            //System.out.println();
        }
         
//        System.out.println(String.valueOf(frame.timestamp()));
//        System.out.println(String.valueOf(nextBeepTime));
//        System.out.println(String.valueOf(UI.destination[1]));
        
       
        HandDetected = (frame.hands().count()>0);
        
        
        DropTolerance = UI.Tolerance;
                    
        if (Math.abs(UI.Diff()[2]) > Math.abs(UI.Diff()[0])){ // z direction the largest
            if (UI.Diff()[2]>0){
                direction = "backward";
            } else {
                direction = "forward";
            }
        } else { // x direction the largest
            if (UI.Diff()[0]>0){
                direction = "left";
            } else {
                direction = "right";
            }
        }
        
        if ( (nextBeepTime - frame.timestamp() <12000)&& UI.AudioNavigationOn() && HandDetected){
        
        if (UI.isBoard) {
            DropPositive = false;
            if (Math.abs(UI.Diff()[0])<DropTolerance && Math.abs(UI.Diff()[2])<DropTolerance){
                DropPositive = true;
            }
            if (DropPositive){//Play Drop
                try {
                    clip = Applet.newAudioClip(new URL("file:C:\\Never_Be_Board\\Sound\\drop.wav"));
                    clip.play();
                } catch (MalformedURLException murle) {
                    //System.out.println(murle);
                }
                UI.turnOffAudio();
                //nextBeepTime = frame.timestamp() + 1200000;
            } else {//DropNegative
                if ((beepTimes % 3) != 0){//Play Beep
                    try {
                        clip = Applet.newAudioClip(new URL("file:C:\\Never_Be_Board\\Sound\\beep.wav"));
                        clip.play();
                    } catch (MalformedURLException murle) {
                        //System.out.println(murle);
                    }
                  
                } else {//Play Direction
                     switch (direction) {
                        case "left" : {//Play left
                            try {
                                clip = Applet.newAudioClip(new URL("file:C:\\Never_Be_Board\\Sound\\left.wav"));
                                clip.play();
                            } catch (MalformedURLException murle) {
                                //System.out.println(murle);
                            }
                            break;
                         }
                        case "right" : {//Play right
                            try {
                                clip = Applet.newAudioClip(new URL("file:C:\\Never_Be_Board\\Sound\\right.wav"));
                                clip.play();
                            } catch (MalformedURLException murle) {
                                //System.out.println(murle);
                            }
                            break;
                         }
                        case "forward" : {//Play forward
                            try {
                                clip = Applet.newAudioClip(new URL("file:C:\\Never_Be_Board\\Sound\\forward.wav"));
                                clip.play();
                            } catch (MalformedURLException murle) {
                                //System.out.println(murle);
                            }
                            break;
                         }
                        case "backward" : {//Play backward
                            try {
                                clip = Applet.newAudioClip(new URL("file:C:\\Never_Be_Board\\Sound\\backward.wav"));
                                clip.play();
                            } catch (MalformedURLException murle) {
                                //System.out.println(murle);
                            }
                            break;
                         }
                     }//End of Switch direction

                }//End of Play Direction
                                   
                   // Calculate next command time
                   long beepTime = frame.timestamp();
                   long duration = 25000*(long)UI.getDistance()+200000;
                   nextBeepTime = beepTime + duration;
                   //System.out.println(String.valueOf(nextBeepTime));
            }//End of DropNegative
           
        } else { // STICK!!!
            DropPositive = false;
            DropTolerance = 15.0;
            boolean HeightFulfilled = UI.Diff()[1]<0.0;
            if (Math.abs(UI.Diff()[0])<DropTolerance && Math.abs(UI.Diff()[2])<DropTolerance && HeightFulfilled){
                DropPositive = true;
            }
            if (DropPositive){//Play Drop
                try {
                    clip = Applet.newAudioClip(new URL("file:C:\\Never_Be_Board\\Sound\\drop.wav"));
                    clip.play();
                } catch (MalformedURLException murle) {
                    //System.out.println(murle);
                }
                UI.turnOffAudio();
                //nextBeepTime = frame.timestamp() + 1200000;
            } else {//DropNegative
                if (!HeightFulfilled) {
                    double UpRange = 60.0;
                    timeToMoveUp = Math.abs(UI.Diff()[0])<UpRange && Math.abs(UI.Diff()[2])<UpRange;
                    if (timeToMoveUp) {
                        try {
                            clip = Applet.newAudioClip(new URL("file:C:\\Never_Be_Board\\Sound\\up.wav"));
                            clip.play();
                        } catch (MalformedURLException murle) {
                            //System.out.println(murle);
                        }
                    } else {//Not time to move up
                        if ((beepTimes % 3) != 0){//Play Beep
                            try {
                                clip = Applet.newAudioClip(new URL("file:C:\\Never_Be_Board\\Sound\\beep.wav"));
                                clip.play();
                            } catch (MalformedURLException murle) {
                                //System.out.println(murle);
                            }

                        } else {//Play Direction
                             switch (direction) {
                                case "left" : {//Play left
                                    try {
                                        clip = Applet.newAudioClip(new URL("file:C:\\Never_Be_Board\\Sound\\left.wav"));
                                        clip.play();
                                    } catch (MalformedURLException murle) {
                                        //System.out.println(murle);
                                    }
                                    break;
                                 }
                                case "right" : {//Play right
                                    try {
                                        clip = Applet.newAudioClip(new URL("file:C:\\Never_Be_Board\\Sound\\right.wav"));
                                        clip.play();
                                    } catch (MalformedURLException murle) {
                                        //System.out.println(murle);
                                    }
                                    break;
                                 }
                                case "forward" : {//Play forward
                                    try {
                                        clip = Applet.newAudioClip(new URL("file:C:\\Never_Be_Board\\Sound\\forward.wav"));
                                        clip.play();
                                    } catch (MalformedURLException murle) {
                                        //System.out.println(murle);
                                    }
                                    break;
                                 }
                                case "backward" : {//Play backward
                                    try {
                                        clip = Applet.newAudioClip(new URL("file:C:\\Never_Be_Board\\Sound\\backward.wav"));
                                        clip.play();
                                    } catch (MalformedURLException murle) {
                                        //System.out.println(murle);
                                    }
                                    break;
                                 }
                             }//End of Switch direction

                        }//End of Play Direction

                        // Calculate next command time
                        long beepTime = frame.timestamp();
                        long duration = 25000*(long)UI.getDistance()+200000;
                        nextBeepTime = beepTime + duration;
                        //System.out.println(String.valueOf(nextBeepTime));
                        
                    }//End of Not Time to move up
                        
                } else {//Height fulfilled
                        switch (direction) {
                                case "left" : {//Play left
                                    try {
                                        clip = Applet.newAudioClip(new URL("file:C:\\Never_Be_Board\\Sound\\left.wav"));
                                        clip.play();
                                    } catch (MalformedURLException murle) {
                                        //System.out.println(murle);
                                    }
                                    break;
                                 }
                                case "right" : {//Play right
                                    try {
                                        clip = Applet.newAudioClip(new URL("file:C:\\Never_Be_Board\\Sound\\right.wav"));
                                        clip.play();
                                    } catch (MalformedURLException murle) {
                                        //System.out.println(murle);
                                    }
                                    break;
                                 }
                                case "forward" : {//Play forward
                                    try {
                                        clip = Applet.newAudioClip(new URL("file:C:\\Never_Be_Board\\Sound\\forward.wav"));
                                        clip.play();
                                    } catch (MalformedURLException murle) {
                                        //System.out.println(murle);
                                    }
                                    break;
                                 }
                                case "backward" : {//Play backward
                                    try {
                                        clip = Applet.newAudioClip(new URL("file:C:\\Never_Be_Board\\Sound\\backward.wav"));
                                        clip.play();
                                    } catch (MalformedURLException murle) {
                                        //System.out.println(murle);
                                    }
                                    break;
                                 }
                             }//End of Switch direction
                    long beepTime = frame.timestamp();
                    nextBeepTime = beepTime + 300000;
                    //System.out.println(String.valueOf(nextBeepTime));
                } //End of Height not fulfilled
            }//End of DropNegative
            
            
            
            
        }//End of Stick
        
        beepTimes++;
    }//End of Beep Time
        
    }//End of onFrame
}//End of LeapListener
